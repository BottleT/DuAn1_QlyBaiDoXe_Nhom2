USE DuAn1_QuanLyBaiDoXe_Nhom2;

-- Tạo bảng BaiDoXe
CREATE TABLE BaiDoXe (
    MaBaiDo INT IDENTITY(1,1) PRIMARY KEY,
    TenBaiDo VARCHAR(100) NOT NULL,
    ViTri VARCHAR(255) NOT NULL,
    TongSoCho INT NOT NULL,
    SoChoConLai INT NOT NULL
);

-- Tạo bảng ChoDoXe
CREATE TABLE ChoDoXe (
    MaChoDo INT IDENTITY(1,1) PRIMARY KEY,
    MaBaiDo INT,
    SoCho VARCHAR(50) NOT NULL,
    CoXe BIT NOT NULL,
    LoaiCho VARCHAR(50),
    FOREIGN KEY (MaBaiDo) REFERENCES BaiDoXe(MaBaiDo)
);

-- Tạo bảng ChuSoHuu
CREATE TABLE ChuSoHuu (
    MaChuSoHuu INT IDENTITY(1,1) PRIMARY KEY,
    TenChuSoHuu VARCHAR(100) NOT NULL,
    SoDienThoai VARCHAR(15) NOT NULL,
    Email VARCHAR(100),
    DiaChi VARCHAR(255)
);

-- Tạo bảng PhuongTien
CREATE TABLE PhuongTien (
    MaPhuongTien INT IDENTITY(1,1) PRIMARY KEY,
    BienSoXe VARCHAR(50) NOT NULL,
    LoaiXe VARCHAR(50) NOT NULL,
    MaChuSoHuu INT,
    MauXe VARCHAR(100),
    MauSac VARCHAR(50),
    FOREIGN KEY (MaChuSoHuu) REFERENCES ChuSoHuu(MaChuSoHuu)
);

-- Tạo bảng DatCho
CREATE TABLE DatCho (
    MaDatCho INT IDENTITY(1,1) PRIMARY KEY,
    MaChoDo INT,
    MaPhuongTien INT,
    ThoiGianBatDau DATETIME NOT NULL,
    ThoiGianKetThuc DATETIME NOT NULL,
    TrangThai VARCHAR(50),
    FOREIGN KEY (MaChoDo) REFERENCES ChoDoXe(MaChoDo),
    FOREIGN KEY (MaPhuongTien) REFERENCES PhuongTien(MaPhuongTien)
);

-- Tạo bảng ThanhToan
CREATE TABLE ThanhToan (
    MaThanhToan INT IDENTITY(1,1) PRIMARY KEY,
    MaDatCho INT,
    SoTien DECIMAL(10, 2) NOT NULL,
    NgayThanhToan DATETIME NOT NULL,
    PhuongThucThanhToan VARCHAR(50),
    FOREIGN KEY (MaDatCho) REFERENCES DatCho(MaDatCho)
);

-- Tạo bảng NhanVien
CREATE TABLE NhanVien (
    MaNhanVien INT IDENTITY(1,1) PRIMARY KEY,
    TenNhanVien VARCHAR(100) NOT NULL,
    ChucVu VARCHAR(50) NOT NULL,
    SoDienThoai VARCHAR(15) NOT NULL,
    Email VARCHAR(100)
);

-- Tạo bảng CaLamViec
CREATE TABLE CaLamViec (
    MaCaLamViec INT IDENTITY(1,1) PRIMARY KEY,
    MaNhanVien INT,
    ThoiGianBatDau DATETIME NOT NULL,
    ThoiGianKetThuc DATETIME NOT NULL,
    FOREIGN KEY (MaNhanVien) REFERENCES NhanVien(MaNhanVien)
);

-- Tạo bảng Ve
CREATE TABLE Ve (
    MaVe INT IDENTITY(1,1) PRIMARY KEY,
    MaDatCho INT,
    NgayPhatHanh DATETIME NOT NULL,
    NgayHetHan DATETIME NOT NULL,
    TrangThai VARCHAR(50),
    FOREIGN KEY (MaDatCho) REFERENCES DatCho(MaDatCho)
);

-- Tạo bảng GiamGia
CREATE TABLE GiamGia (
    IDGiamGia INT IDENTITY(1,1) PRIMARY KEY,
    MaGiamGia VARCHAR(50) NOT NULL,
    MoTa VARCHAR(255),
    PhanTramGiam DECIMAL(5, 2) NOT NULL,
    NgayHetHan DATETIME NOT NULL
);

-- Tạo bảng ApDungGiamGia
CREATE TABLE ApDungGiamGia (
    MaApDungGiamGia INT IDENTITY(1,1) PRIMARY KEY,
    IDGiamGia INT,
    MaThanhToan INT,
    SoTienGiam DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (IDGiamGia) REFERENCES GiamGia(IDGiamGia),
    FOREIGN KEY (MaThanhToan) REFERENCES ThanhToan(MaThanhToan)
);

-- Tạo bảng TaiKhoan
CREATE TABLE TaiKhoan (
    MaTaiKhoan INT IDENTITY(1,1) PRIMARY KEY,
    MaNhanVien INT,
    TenDangNhap VARCHAR(50) NOT NULL,
    MatKhau VARCHAR(50) NOT NULL,
    LoaiNguoiDung VARCHAR(20) CHECK (LoaiNguoiDung IN ('NhanVien', 'QuanLy')),
    Email VARCHAR(100),
    SoDienThoai VARCHAR(15) NOT NULL,
    FOREIGN KEY (MaNhanVien) REFERENCES NhanVien(MaNhanVien)
);

-- Tạo ràng buộc kiểm tra cho số điện thoại
ALTER TABLE TaiKhoan
ADD CONSTRAINT CHK_SoDienThoai_VietNam 
CHECK (
    -- Số điện thoại bắt đầu bằng '0' hoặc '+84'
    (SoDienThoai LIKE '0%' OR SoDienThoai LIKE '+84%') 
    AND
    -- Độ dài từ 10 đến 11 ký tự (loại bỏ ký tự '+')
    LEN(REPLACE(SoDienThoai, '+', '')) BETWEEN 10 AND 11
);

-- Tạo ràng buộc kiểm tra cho email
ALTER TABLE TaiKhoan
ADD CONSTRAINT CHK_Email_Format 
CHECK (Email LIKE '%@%.%' AND LEN(Email) <= 100);

-- Chèn dữ liệu vào bảng BaiDoXe
INSERT INTO BaiDoXe (TenBaiDo, ViTri, TongSoCho, SoChoConLai) VALUES
('Bãi A', '123 Đường ABC', 100, 50),
('Bãi B', '456 Đường DEF', 150, 75),
('Bãi C', '789 Đường GHI', 200, 100),
('Bãi D', '101 Đường JKL', 250, 125),
('Bãi E', '112 Đường MNO', 300, 150),
('Bãi F', '134 Đường PQR', 350, 175),
('Bãi G', '145 Đường STU', 400, 200),
('Bãi H', '167 Đường VWX', 450, 225),
('Bãi I', '178 Đường YZA', 500, 250),
('Bãi J', '189 Đường BCD', 550, 275);

-- Chèn dữ liệu vào bảng ChoDoXe
INSERT INTO ChoDoXe (MaBaiDo, SoCho, CoXe, LoaiCho) VALUES
(1, 'A1', 0, 'Xe máy'),
(1, 'A2', 1, 'Xe máy'),
(2, 'B1', 0, 'Xe ô tô'),
(2, 'B2', 1, 'Xe ô tô'),
(3, 'C1', 0, 'Xe đạp'),
(3, 'C2', 1, 'Xe đạp'),
(4, 'D1', 0, 'Xe máy'),
(4, 'D2', 1, 'Xe máy'),
(5, 'E1', 0, 'Xe ô tô'),
(5, 'E2', 1, 'Xe ô tô');

-- Chèn dữ liệu vào bảng ChuSoHuu
INSERT INTO ChuSoHuu (TenChuSoHuu, SoDienThoai, Email, DiaChi) VALUES
('Nguyen Van A', '0901234567', 'a@example.com', '123 Đường ABC'),
('Le Thi B', '0902345678', 'b@example.com', '456 Đường DEF'),
('Tran Van C', '0903456789', 'c@example.com', '789 Đường GHI'),
('Pham Thi D', '0904567890', 'd@example.com', '101 Đường JKL'),
('Hoang Van E', '0905678901', 'e@example.com', '112 Đường MNO'),
('Bui Thi F', '0906789012', 'f@example.com', '134 Đường PQR'),
('Do Van G', '0907890123', 'g@example.com', '145 Đường STU'),
('Vo Thi H', '0908901234', 'h@example.com', '167 Đường VWX'),
('Vu Van I', '0909012345', 'i@example.com', '178 Đường YZA'),
('Dang Thi J', '0900123456', 'j@example.com', '189 Đường BCD');

-- Chèn dữ liệu vào bảng PhuongTien
INSERT INTO PhuongTien (BienSoXe, LoaiXe, MaChuSoHuu, MauXe, MauSac) VALUES
('30A-12345', 'Xe máy', 1, 'Đen', 'Yamaha Exciter'),
('51C-67890', 'Xe máy', 2, 'Trắng', 'Honda Air Blade'),
('34D-24680', 'Xe ô tô', 3, 'Đỏ', 'Toyota Vios'),
('97G-13579', 'Xe ô tô', 4, 'Xanh', 'Honda CR-V'),
('88H-64201', 'Xe đạp', 5, 'Vàng', 'Asama'),
('59I-75310', 'Xe đạp', 6, 'Xanh lá cây', 'Panasonic'),
('22J-86420', 'Xe máy', 7, 'Xanh dương', 'SYM Attila'),
('93K-97531', 'Xe máy', 8, 'Đen', 'Honda Lead'),
('64L-48652', 'Xe ô tô', 9, 'Xám', 'Mazda 3'),
('75M-59763', 'Xe ô tô', 10, 'Nâu', 'Hyundai Elantra');

-- Chèn dữ liệu vào bảng DatCho
INSERT INTO DatCho (MaChoDo, MaPhuongTien, ThoiGianBatDau, ThoiGianKetThuc, TrangThai) VALUES
(1, 1, '2024-07-11 08:00:00', '2024-07-11 09:00:00', 'Đã thanh toán'),
(2, 2, '2024-07-12 09:00:00', '2024-07-12 10:00:00', 'Chưa thanh toán'),
(3, 3, '2024-07-13 10:00:00', '2024-07-13 11:00:00', 'Chưa thanh toán'),
(4, 4, '2024-07-14 11:00:00', '2024-07-14 12:00:00', 'Đã thanh toán'),
(5, 5, '2024-07-15 12:00:00', '2024-07-15 13:00:00', 'Đã thanh toán');

-- Chèn dữ liệu vào bảng ThanhToan
INSERT INTO ThanhToan (MaDatCho, SoTien, NgayThanhToan, PhuongThucThanhToan) VALUES
(1, 50000.00, '2024-07-11 09:00:00', 'Tiền mặt'),
(2, 100000.00, '2024-07-12 10:00:00', 'Chuyển khoản'),
(3, 150000.00, '2024-07-13 11:00:00', 'Thẻ ngân hàng'),
(4, 200000.00, '2024-07-14 12:00:00', 'Tiền mặt'),
(5, 250000.00, '2024-07-15 13:00:00', 'Chuyển khoản');

-- Chèn dữ liệu vào bảng NhanVien
INSERT INTO NhanVien (TenNhanVien, ChucVu, SoDienThoai, Email) VALUES
('Nguyen Van Nhan', 'Quản lý', '0909876543', 'nhan@example.com'),
('Tran Thi Thao', 'Nhân viên', '0908765432', 'thao@example.com'),
('Hoang Van Hieu', 'Nhân viên', '0907654321', 'hieu@example.com');

-- Chèn dữ liệu vào bảng CaLamViec
INSERT INTO CaLamViec (MaNhanVien, ThoiGianBatDau, ThoiGianKetThuc) VALUES
(1, '2024-07-11 08:00:00', '2024-07-11 17:00:00'),
(2, '2024-07-12 08:00:00', '2024-07-12 17:00:00'),
(3, '2024-07-13 08:00:00', '2024-07-13 17:00:00');

-- Chèn dữ liệu vào bảng Ve
INSERT INTO Ve (MaDatCho, NgayPhatHanh, NgayHetHan, TrangThai) VALUES
(1, '2024-07-11 09:00:00', '2024-07-11 18:00:00', 'Còn hiệu lực'),
(2, '2024-07-12 10:00:00', '2024-07-12 19:00:00', 'Hết hiệu lực'),
(3, '2024-07-13 11:00:00', '2024-07-13 20:00:00', 'Còn hiệu lực'),
(4, '2024-07-14 12:00:00', '2024-07-14 21:00:00', 'Còn hiệu lực'),
(5, '2024-07-15 13:00:00', '2024-07-15 22:00:00', 'Hết hiệu lực');

-- Chèn dữ liệu vào bảng GiamGia
INSERT INTO GiamGia (MaGiamGia, MoTa, PhanTramGiam, NgayHetHan) VALUES
('GG12345', 'Giảm giá 10% cho khách hàng thân thiết', 10.00, '2024-12-31'),
('GG54321', 'Giảm giá 20% cho khách hàng mới', 20.00, '2024-12-31');

-- Chèn dữ liệu vào bảng ApDungGiamGia
INSERT INTO ApDungGiamGia (IDGiamGia, MaThanhToan, SoTienGiam) VALUES
(1, 1, 45000.00),
(2, 2, 80000.00),
(3, 3, 135000.00),
(4, 4, 180000.00),
(5, 5, 225000.00);

-- Chèn dữ liệu vào bảng TaiKhoan
INSERT INTO TaiKhoan (MaNhanVien, TenDangNhap, MatKhau, LoaiNguoiDung, Email, SoDienThoai) VALUES
(1, 'quanly1', 'quanly1', 'QuanLy', 'quanly1@example.com', '0901234567'),
(2, 'nhanvien1', 'nhanvien1', 'NhanVien', 'nhanvien1@example.com', '0902345678'),
(3, 'nhanvien2', 'nhanvien2', 'NhanVien', 'nhanvien2@example.com', '0903456789');

-- Kiểm tra bảng GiamGia
SELECT * FROM GiamGia;

-- Nếu cần, xóa dữ liệu không hợp lệ từ bảng ApDungGiamGia trước khi chèn lại
DELETE FROM ApDungGiamGia;

-- Chèn lại dữ liệu vào bảng ApDungGiamGia
INSERT INTO ApDungGiamGia (IDGiamGia, MaThanhToan, SoTienGiam) VALUES
(1, 1, 45000.00),  -- Đảm bảo IDGiamGia=1 tồn tại trong bảng GiamGia
(2, 2, 80000.00),  -- Đảm bảo IDGiamGia=2 tồn tại trong bảng GiamGia
(1, 3, 135000.00), -- Đảm bảo IDGiamGia=1 tồn tại trong bảng GiamGia
(2, 4, 180000.00), -- Đảm bảo IDGiamGia=2 tồn tại trong bảng GiamGia
(1, 5, 225000.00); -- Đảm bảo IDGiamGia=1 tồn tại trong bảng GiamGia
